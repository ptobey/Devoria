    public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
        if (sender instanceof Player) {
            Player player = (Player) sender;
            Core.getClassSelectGUI().openInventory(player);
            PlayerInventory playerInventory = player.getInventory();
            String itemStack = SerializeInventory.playerInventoryToBase64(playerInventory);
            UUID uuid = ((Player) sender).getUniqueId();
            String current_class = Listeners.lookUpPlayer(((Player) sender).getUniqueId()).getType();
            String c_class = ClassTable.FindCurrentClass(uuid);
            ItemStack[] items ={};

            switch (args[0].toLowerCase(Locale.ROOT)) {
                case "huntsman":

                    try {
                        Item_Stack.updateItemStack(uuid,current_class,itemStack);
                    } catch (SQLException throwables) {
                        Bukkit.getLogger().info(throwables.toString());
                        Bukkit.getLogger().info("Could not update");
                    }
                    sender.sendMessage("You picked the Huntsman class!");
                    sender.sendMessage("Your past class is->" + c_class);
                    try {
                        ClassTable.SetCurrentClass(uuid,"huntsman");
                    } catch (SQLException throwables) {
                        Bukkit.getLogger().info(throwables.toString());
                        Bukkit.getLogger().info("Could not set class hunt on db");

                    }
                    ((Player) sender).getInventory().clear();
                    items = Item_Stack.getItemStack(((Player) sender).getUniqueId(),"huntsman");

                    ((Player) sender).getInventory().setContents(items);



                    return true;
                case "sorcerer":

                    try {
                        Item_Stack.updateItemStack(uuid,current_class,itemStack);
                    } catch (SQLException throwables) {
                        Bukkit.getLogger().info(throwables.toString());
                        Bukkit.getLogger().info("Could not update");
                    }

                    sender.sendMessage("You picked the sorcerer class!");
                    sender.sendMessage("Your past class is->" + c_class);
                    try {
                        ClassTable.SetCurrentClass(uuid,"sorcerer");
                    } catch (SQLException throwables) {
                        Bukkit.getLogger().info(throwables.toString());
                        Bukkit.getLogger().info("Could not set class sorcerer on db");
                    }
                    ((Player) sender).getInventory().clear();
                    items = Item_Stack.getItemStack(((Player) sender).getUniqueId(),"sorcerer");
                    ((Player) sender).getInventory().setContents(items);
                    return true;
                case "bard":
                    try {
                        Item_Stack.updateItemStack(uuid,current_class,itemStack);
                    } catch (SQLException throwables) {
                        Bukkit.getLogger().info(throwables.toString());
                        Bukkit.getLogger().info("Could not update");
                    }
                    sender.sendMessage("You picked the Bard class!");
                    sender.sendMessage("Your past class is->" + c_class);
                    try {
                        ClassTable.SetCurrentClass(uuid,"bard");
                    } catch (SQLException throwables) {
                        Bukkit.getLogger().info(throwables.toString());
                        Bukkit.getLogger().info("Could not set class bard on db");
                    }
                    ((Player) sender).getInventory().clear();

                    items = Item_Stack.getItemStack(((Player) sender).getUniqueId(),"Bard");
                    ((Player) sender).getInventory().setContents(items);

                    return true;
                case "knight":
                    try {
                        Item_Stack.updateItemStack(uuid,current_class,itemStack);
                    } catch (SQLException throwables) {
                        Bukkit.getLogger().info(throwables.toString());
                        Bukkit.getLogger().info("Could not update");
                    }
                    sender.sendMessage("You picked the Knight class!");
                    sender.sendMessage("Your past class is->" + c_class);
                    try {
                        ClassTable.SetCurrentClass(uuid,"knight");
                    } catch (SQLException throwables) {
                        Bukkit.getLogger().info(throwables.toString());
                        Bukkit.getLogger().info("Could not set class knight on db");
                    }
                    ((Player) sender).getInventory().clear();
                    items = Item_Stack.getItemStack(((Player) sender).getUniqueId(),"knight");
                    ((Player) sender).getInventory().setContents(items);
                    }
                    return true;
            }
            return true;
        }
}


